// Generated by CoffeeScript 1.6.3
/*
Dependencies: FiveKit.Dropbox,
              FiveKit.FileReader,
              jQuery.exif.js
*/


(function() {
  var $;

  $ = jQuery;

  if (!window.FiveKit) {
    window.FiveKit = {};
  }

  window.FiveKit.Previewer = (function() {
    function Previewer(options) {
      this.options = options;
      this.fileInput = $(this.options.el);
      this.fieldName = this.fileInput.attr('name');
      this.hiddenInput = this.createHiddenInput(this.fieldName);
      this.widgetContainer = this.fileInput.parents(".formkit-widget-thumbimagefile");
      this.cover = this.widgetContainer.find(".formkit-image-cover");
      this.coverImage = this.cover.find('img');
      this.autoresizeCheckbox = this.widgetContainer.find('.autoresize-checkbox');
      this.autoresizeTypeSelector = this.widgetContainer.find('.autoresize-type-selector');
      this.initialize();
    }

    Previewer.prototype.initialize = function() {
      var d, defaultDimension, dropzone,
        _this = this;
      this.fileInput.on("change", function(e) {
        var _ref;
        _this.use("file");
        if ((_ref = e.target.files) != null ? _ref[0] : void 0) {
          return _this.renderPreviewImage(e.target.files[0]);
        }
      });
      this.fileInput.after(this.hiddenInput);
      d = this.getImageDimension();
      dropzone = $('<div/>').addClass('image-dropzone');
      this.cover.before(dropzone);
      defaultDimension = {
        width: 240,
        height: 120
      };
      this.cover.css(d || defaultDimension);
      dropzone.css(d || defaultDimension);
      if (!this.coverImage.get(0)) {
        this.insertImageHolder(d);
      } else {
        if (d) {
          this.scaleCoverImageByDefault(d);
        }
        this.initCoverController();
      }
      return this.initDropbox(dropzone);
    };

    Previewer.prototype.insertImageHolder = function(d) {
      var holdertheme, imageholder;
      if (!(d && (d != null ? d.width : void 0) && (d != null ? d.height : void 0))) {
        return;
      }
      if (window.navigator.userAgent.match(/MSIE 8/)) {
        return;
      }
      holdertheme = "social";
      imageholder = $('<img/>').attr("data-src", ["holder.js", d.width + "x" + d.height, holdertheme].join("/"));
      this.cover.append(imageholder);
      return Holder.run({
        images: imageholder.get(0)
      });
    };

    Previewer.prototype.getImageDimension = function() {
      var h, w, _ref;
      _ref = [this.fileInput.data('width'), this.fileInput.data('height')], w = _ref[0], h = _ref[1];
      if (w && h) {
        return {
          width: w,
          height: h
        };
      }
    };

    Previewer.prototype.removeCoverImage = function() {
      return this.cover.empty();
    };

    Previewer.prototype.createHiddenInput = function(name) {
      var $input;
      $input = $('<input type="hidden" class="formkit-widget-thumbimagefile-hidden">');
      return $input;
    };

    Previewer.prototype.initDropbox = function(dropzone) {
      var progress,
        _this = this;
      progress = $('<div/>').addClass("upload-progress");
      progress.hide().appendTo(this.widgetContainer);
      return this.uploader = new FiveKit.DropBoxUploader({
        el: dropzone,
        queueEl: progress,
        onDrop: function(e) {
          var _ref;
          progress.empty().show();
          if (((_ref = e.dataTransfer.files) != null ? _ref[0] : void 0)) {
            return _this.renderPreviewImage(e.dataTransfer.files[0]);
          }
        },
        onTransferComplete: function(e, result) {
          var remotePath, _ref;
          _this.use('hidden');
          remotePath = (_ref = result.data) != null ? _ref.file : void 0;
          if (result.success && remotePath) {
            _this.renderUploadImage(remotePath);
          } else if (result.error) {
            _this.removeCoverImage();
            _this.insertImageHolder(_this.getImageDimension());
          }
          return setTimeout((function() {
            return progress.fadeOut();
          }), 1200);
        }
      });
    };

    Previewer.prototype.use = function(type) {
      if (type === 'hidden') {
        this.hiddenInput.attr('name', this.fieldName);
        this.fileInput.attr('name', '');
        return this.fileInput.hide();
      } else if (type === 'file') {
        this.fileInput.attr('name', this.fieldName);
        this.fileInput.show();
        return this.hiddenInput.attr('name', '');
      }
    };

    Previewer.prototype.scaleCoverImageByMaxWidth = function(d) {
      if (this.coverImage.width() > d.width) {
        return this.coverImage.css({
          width: '100%',
          height: 'auto'
        });
      }
    };

    Previewer.prototype.scaleCoverImageByMaxHeight = function(d) {
      if (this.coverImage.height() > d.height) {
        return this.coverImage.css({
          height: '100%',
          width: 'auto'
        });
      }
    };

    Previewer.prototype.scaleCoverImageByFullScale = function(d) {
      return $(img).css({
        height: '100%',
        width: '100%'
      });
    };

    Previewer.prototype.scaleCoverImageByDefault = function(d) {
      if (d && typeof this.coverImage !== "undefined") {
        if (this.coverImage.height() > d.height) {
          this.coverImage.css({
            height: '100%',
            width: 'auto'
          });
        }
        if (this.coverImage.width() > d.width) {
          return this.coverImage.css({
            width: '100%',
            height: 'auto'
          });
        }
      }
    };

    Previewer.prototype.renderCoverImage = function(src) {
      var d, self;
      this.removeCoverImage();
      self = this;
      d = this.getImageDimension();
      this.coverImage = $('<img/>').appendTo(this.cover);
      this.coverImage.hide();
      this.coverImage.on('load', function() {
        $(this).exifLoad();
        if (d) {
          self.scaleCoverImageByDefault(d);
        }
        return $(this).fadeIn();
      });
      this.coverImage.attr('src', src);
      this.initCoverController();
      return this.coverImage;
    };

    Previewer.prototype.initCoverController = function() {
      var exifButton, exifData, removeButton,
        _this = this;
      removeButton = $('<div class="close"></div>').css('zIndex', 1000);
      removeButton.on('click', function(e) {
        _this.removeCoverImage();
        _this.use("file");
        return _this.insertImageHolder(_this.getImageDimension());
      });
      this.cover.append(removeButton);
      if (this.fileInput.data('exif')) {
        exifButton = $('<div/>').addClass('exif').css('zIndex', 1000).appendTo(this.cover);
        exifButton.on('click', function(e) {});
        exifData = $(this).exifPretty();
        if ($.isEmptyObject(exifData) || !exifData) {
          exifData = "No EXIF information";
        }
        return alert(exifData);
      }
    };

    Previewer.prototype.renderUploadImage = function(src) {
      this.renderCoverImage("/" + src);
      return this.hiddenInput.val(src);
    };

    Previewer.prototype.renderPreviewImage = function(file) {
      var filereader,
        _this = this;
      filereader = new FiveKit.FileReader({
        onLoaded: function(e) {
          _this.renderCoverImage(e.target.result);
          return _this.fileInput.hide();
        }
      });
      return filereader.read(file);
    };

    return Previewer;

  })();

  FormKit.register(function(e, scopeEl) {
    return $(scopeEl).find('.formkit-widget-thumbimagefile input[data-droppreview=true]').each(function(i, fileInput) {
      return new FiveKit.Previewer({
        el: $(fileInput)
      });
    });
  });

}).call(this);
